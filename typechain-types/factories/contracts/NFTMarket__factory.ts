/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__ItemId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiered",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__ListingFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__Price",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__SetListingFee",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "marketItemNFT",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getItemById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTBySeller",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setListingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506608e1bc9bf04000600481905550611eb1806100776000396000f3fe6080604052600436106100865760003560e01c806358eb2df51161005957806358eb2df514610135578063893d20e814610151578063a82ba76f1461017c578063b8fe6abe14610198578063cd2f0710146101c357610086565b8063035b987e1461008b57806303976f76146100b6578063131dbd09146100e157806329aa3a421461010a575b600080fd5b34801561009757600080fd5b506100a0610200565b6040516100ad91906119ef565b60405180910390f35b3480156100c257600080fd5b506100cb6104c9565b6040516100d891906119ef565b60405180910390f35b3480156100ed57600080fd5b506101086004803603810190610103919061162d565b610792565b005b34801561011657600080fd5b5061011f61082c565b60405161012c91906119ef565b60405180910390f35b61014f600480360381019061014a91906115da565b610abf565b005b34801561015d57600080fd5b50610166610e27565b6040516101739190611913565b60405180910390f35b6101966004803603810190610191919061159a565b610e51565b005b3480156101a457600080fd5b506101ad611197565b6040516101ba9190611aac565b60405180910390f35b3480156101cf57600080fd5b506101ea60048036038101906101e5919061162d565b6111a1565b6040516101f79190611a91565b60405180910390f35b6060600061020e6001611361565b9050600061021b8261136f565b90506000808267ffffffffffffffff81111561023a57610239611d00565b5b60405190808252806020026020018201604052801561027357816020015b6102606114ef565b8152602001906001900390816102585790505b50905060005b848110156104be573373ffffffffffffffffffffffffffffffffffffffff16600560006001846102a99190611b3f565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104ab5760006005600060018461030a9190611b3f565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505084868151811061048f5761048e611cd1565b5b602002602001018190525084806104a590611c59565b95505050505b80806104b690611c59565b915050610279565b508094505050505090565b606060006104d76001611361565b905060006104e482611424565b90506000808267ffffffffffffffff81111561050357610502611d00565b5b60405190808252806020026020018201604052801561053c57816020015b6105296114ef565b8152602001906001900390816105215790505b50905060005b84811015610787573373ffffffffffffffffffffffffffffffffffffffff16600560006001846105729190611b3f565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610774576000600560006001846105d39190611b3f565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505084868151811061075857610757611cd1565b5b6020026020010181905250848061076e90611c59565b95505050505b808061077f90611c59565b915050610542565b508094505050505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610822576040517f1ff4873200000000000000000000000000000000000000000000000000000000815260040161081990611a31565b60405180910390fd5b8060048190555050565b6060600061083a6001611361565b905060006108486002611361565b826108539190611b95565b905060008167ffffffffffffffff81111561087157610870611d00565b5b6040519080825280602002602001820160405280156108aa57816020015b6108976114ef565b81526020019060019003908161088f5790505b5090506000805b84811015610ab457600560006001836108ca9190611b3f565b815260200190815260200160002060060160009054906101000a900460ff16610aa1576000600560006001846109009190611b3f565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050858581518110610a8557610a84611cd1565b5b60200260200101819052508380610a9b90611c59565b94505050505b8080610aac90611c59565b9150506108b1565b508194505050505090565b60026000541415610b05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afc90611a71565b60405180910390fd5b600260008190555060008111610b50576040517fb0cca22b000000000000000000000000000000000000000000000000000000008152600401610b4790611a51565b60405180910390fd5b6004543414610b98576004546040517f4306e2a8000000000000000000000000000000000000000000000000000000008152600401610b8f9190611ac7565b60405180910390fd5b610ba260016114d9565b6000610bae6001611361565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d8f93929190611973565b600060405180830381600087803b158015610da957600080fd5b505af1158015610dbd573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff16827fc69b2b721ff6c32f30acabd6e63422f03ab9f210644b7967c62e3c21e7037e25336000876000604051610e1194939291906119aa565b60405180910390a4506001600081905550505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026000541415610e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8e90611a71565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414610f17576040517fb0cca22b000000000000000000000000000000000000000000000000000000008152600401610f0e90611a11565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f93573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610fd193929190611973565b600060405180830381600087803b158015610feb57600080fd5b505af1158015610fff573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060060160006101000a81548160ff02191690831515021790555061109160026114d9565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156110fb573d6000803e3d6000fd5b50808473ffffffffffffffffffffffffffffffffffffffff16847fc69b2b721ff6c32f30acabd6e63422f03ab9f210644b7967c62e3c21e7037e256005600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633876001604051611181949392919061192e565b60405180910390a4505060016000819055505050565b6000600454905090565b6111a96114ef565b6001821080156111c157506111be6001611361565b82115b15611201576040517ff1bfa95b0000000000000000000000000000000000000000000000000000000081526004016111f890611a31565b60405180910390fd5b600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250509050919050565b600081600001549050919050565b6000806000905060005b8381101561141a573373ffffffffffffffffffffffffffffffffffffffff16600560006001846113a99190611b3f565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611407576001826114049190611b3f565b91505b808061141290611c59565b915050611379565b5080915050919050565b6000806000905060005b838110156114cf573373ffffffffffffffffffffffffffffffffffffffff166005600060018461145e9190611b3f565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114bc576001826114b99190611b3f565b91505b80806114c790611c59565b91505061142e565b5080915050919050565b6001816000016000828254019250508190555050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b60008135905061157f81611e4d565b92915050565b60008135905061159481611e64565b92915050565b600080604083850312156115b1576115b0611d2f565b5b60006115bf85828601611570565b92505060206115d085828601611585565b9150509250929050565b6000806000606084860312156115f3576115f2611d2f565b5b600061160186828701611570565b935050602061161286828701611585565b925050604061162386828701611585565b9150509250925092565b60006020828403121561164357611642611d2f565b5b600061165184828501611585565b91505092915050565b600061166683836117d9565b60e08301905092915050565b61167b81611c23565b82525050565b61168a81611bdb565b82525050565b61169981611bc9565b82525050565b6116a881611bc9565b82525050565b60006116b982611b05565b6116c38185611b1d565b93506116ce83611af5565b8060005b838110156116ff5781516116e6888261165a565b97506116f183611b10565b9250506001810190506116d2565b5085935050505092915050565b61171581611bed565b82525050565b61172481611bed565b82525050565b6000611737603c83611b2e565b915061174282611d34565b604082019050919050565b600061175a601183611b2e565b915061176582611d83565b602082019050919050565b600061177d601883611b2e565b915061178882611dac565b602082019050919050565b60006117a0602483611b2e565b91506117ab82611dd5565b604082019050919050565b60006117c3601f83611b2e565b91506117ce82611e24565b602082019050919050565b60e0820160008201516117ef60008501826118f5565b5060208201516118026020850182611690565b50604082015161181560408501826118f5565b5060608201516118286060850182611681565b50608082015161183b6080850182611681565b5060a082015161184e60a08501826118f5565b5060c082015161186160c085018261170c565b50505050565b60e08201600082015161187d60008501826118f5565b5060208201516118906020850182611690565b5060408201516118a360408501826118f5565b5060608201516118b66060850182611681565b5060808201516118c96080850182611681565b5060a08201516118dc60a08501826118f5565b5060c08201516118ef60c085018261170c565b50505050565b6118fe81611c19565b82525050565b61190d81611c19565b82525050565b6000602082019050611928600083018461169f565b92915050565b60006080820190506119436000830187611672565b611950602083018661169f565b61195d6040830185611904565b61196a606083018461171b565b95945050505050565b6000606082019050611988600083018661169f565b611995602083018561169f565b6119a26040830184611904565b949350505050565b60006080820190506119bf600083018761169f565b6119cc602083018661169f565b6119d96040830185611904565b6119e6606083018461171b565b95945050505050565b60006020820190508181036000830152611a0981846116ae565b905092915050565b60006020820190508181036000830152611a2a8161172a565b9050919050565b60006020820190508181036000830152611a4a8161174d565b9050919050565b60006020820190508181036000830152611a6a81611770565b9050919050565b60006020820190508181036000830152611a8a816117b6565b9050919050565b600060e082019050611aa66000830184611867565b92915050565b6000602082019050611ac16000830184611904565b92915050565b6000604082019050611adc6000830184611904565b8181036020830152611aed81611793565b905092915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611b4a82611c19565b9150611b5583611c19565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b8a57611b89611ca2565b5b828201905092915050565b6000611ba082611c19565b9150611bab83611c19565b925082821015611bbe57611bbd611ca2565b5b828203905092915050565b6000611bd482611bf9565b9050919050565b6000611be682611bf9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611c2e82611c35565b9050919050565b6000611c4082611c47565b9050919050565b6000611c5282611bf9565b9050919050565b6000611c6482611c19565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c9757611c96611ca2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520707572636861736500000000602082015250565b7f5072656d697373696f6e2064656e696564000000000000000000000000000000600082015250565b7f5072696365206d7573742062652061626f7665207a65726f0000000000000000600082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b611e5681611bc9565b8114611e6157600080fd5b50565b611e6d81611c19565b8114611e7857600080fd5b5056fea2646970667358221220886f32a9c1cc89b9cc1ad5c40ecd99ca2b371d20bf68f50674be98a26773215c64736f6c63430008070033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
