/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiered",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__ListingFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__Price",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__SetListingFee",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "marketItemNFT",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTBySeller",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setListingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506608e1bc9bf04000600481905550611c1d806100776000396000f3fe60806040526004361061007b5760003560e01c806358eb2df51161004e57806358eb2df51461013e578063893d20e81461015a578063a82ba76f14610185578063b8fe6abe146101a15761007b565b8063035b987e1461008057806303976f76146100ab578063131dbd09146100d657806329aa3a4214610113575b600080fd5b34801561008c57600080fd5b506100956101cc565b6040516100a29190611776565b60405180910390f35b3480156100b757600080fd5b506100c0610495565b6040516100cd9190611776565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f89190611442565b61075e565b60405161010a9190611818565b60405180910390f35b34801561011f57600080fd5b50610128610801565b6040516101359190611776565b60405180910390f35b610158600480360381019061015391906113ef565b610a94565b005b34801561016657600080fd5b5061016f610dfc565b60405161017c919061169a565b60405180910390f35b61019f600480360381019061019a91906113af565b610e26565b005b3480156101ad57600080fd5b506101b661116c565b6040516101c39190611818565b60405180910390f35b606060006101da6001611176565b905060006101e782611184565b90506000808267ffffffffffffffff81111561020657610205611a6c565b5b60405190808252806020026020018201604052801561023f57816020015b61022c611304565b8152602001906001900390816102245790505b50905060005b8481101561048a573373ffffffffffffffffffffffffffffffffffffffff166005600060018461027591906118ab565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610477576000600560006001846102d691906118ab565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505084868151811061045b5761045a611a3d565b5b60200260200101819052508480610471906119c5565b95505050505b8080610482906119c5565b915050610245565b508094505050505090565b606060006104a36001611176565b905060006104b082611239565b90506000808267ffffffffffffffff8111156104cf576104ce611a6c565b5b60405190808252806020026020018201604052801561050857816020015b6104f5611304565b8152602001906001900390816104ed5790505b50905060005b84811015610753573373ffffffffffffffffffffffffffffffffffffffff166005600060018461053e91906118ab565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107405760006005600060018461059f91906118ab565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505084868151811061072457610723611a3d565b5b6020026020010181905250848061073a906119c5565b95505050505b808061074b906119c5565b91505061050e565b508094505050505090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107f0576040517f1ff487320000000000000000000000000000000000000000000000000000000081526004016107e7906117b8565b60405180910390fd5b816004819055506004549050919050565b6060600061080f6001611176565b9050600061081d6002611176565b826108289190611901565b905060008167ffffffffffffffff81111561084657610845611a6c565b5b60405190808252806020026020018201604052801561087f57816020015b61086c611304565b8152602001906001900390816108645790505b5090506000805b84811015610a89576005600060018361089f91906118ab565b815260200190815260200160002060060160009054906101000a900460ff16610a76576000600560006001846108d591906118ab565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050858581518110610a5a57610a59611a3d565b5b60200260200101819052508380610a70906119c5565b94505050505b8080610a81906119c5565b915050610886565b508194505050505090565b60026000541415610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad1906117f8565b60405180910390fd5b600260008190555060008111610b25576040517fb0cca22b000000000000000000000000000000000000000000000000000000008152600401610b1c906117d8565b60405180910390fd5b6004543414610b6d576004546040517f4306e2a8000000000000000000000000000000000000000000000000000000008152600401610b649190611833565b60405180910390fd5b610b7760016112ee565b6000610b836001611176565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d64939291906116fa565b600060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff16827fc69b2b721ff6c32f30acabd6e63422f03ab9f210644b7967c62e3c21e7037e25336000876000604051610de69493929190611731565b60405180910390a4506001600081905550505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026000541415610e6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e63906117f8565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414610eec576040517fb0cca22b000000000000000000000000000000000000000000000000000000008152600401610ee390611798565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f68573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610fa6939291906116fa565b600060405180830381600087803b158015610fc057600080fd5b505af1158015610fd4573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060060160006101000a81548160ff02191690831515021790555061106660026112ee565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156110d0573d6000803e3d6000fd5b50808473ffffffffffffffffffffffffffffffffffffffff16847fc69b2b721ff6c32f30acabd6e63422f03ab9f210644b7967c62e3c21e7037e256005600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387600160405161115694939291906116b5565b60405180910390a4505060016000819055505050565b6000600454905090565b600081600001549050919050565b6000806000905060005b8381101561122f573373ffffffffffffffffffffffffffffffffffffffff16600560006001846111be91906118ab565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561121c5760018261121991906118ab565b91505b8080611227906119c5565b91505061118e565b5080915050919050565b6000806000905060005b838110156112e4573373ffffffffffffffffffffffffffffffffffffffff166005600060018461127391906118ab565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156112d1576001826112ce91906118ab565b91505b80806112dc906119c5565b915050611243565b5080915050919050565b6001816000016000828254019250508190555050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b60008135905061139481611bb9565b92915050565b6000813590506113a981611bd0565b92915050565b600080604083850312156113c6576113c5611a9b565b5b60006113d485828601611385565b92505060206113e58582860161139a565b9150509250929050565b60008060006060848603121561140857611407611a9b565b5b600061141686828701611385565b93505060206114278682870161139a565b92505060406114388682870161139a565b9150509250925092565b60006020828403121561145857611457611a9b565b5b60006114668482850161139a565b91505092915050565b600061147b83836115ee565b60e08301905092915050565b6114908161198f565b82525050565b61149f81611947565b82525050565b6114ae81611935565b82525050565b6114bd81611935565b82525050565b60006114ce82611871565b6114d88185611889565b93506114e383611861565b8060005b838110156115145781516114fb888261146f565b97506115068361187c565b9250506001810190506114e7565b5085935050505092915050565b61152a81611959565b82525050565b61153981611959565b82525050565b600061154c603c8361189a565b915061155782611aa0565b604082019050919050565b600061156f60118361189a565b915061157a82611aef565b602082019050919050565b600061159260188361189a565b915061159d82611b18565b602082019050919050565b60006115b560248361189a565b91506115c082611b41565b604082019050919050565b60006115d8601f8361189a565b91506115e382611b90565b602082019050919050565b60e082016000820151611604600085018261167c565b50602082015161161760208501826114a5565b50604082015161162a604085018261167c565b50606082015161163d6060850182611496565b5060808201516116506080850182611496565b5060a082015161166360a085018261167c565b5060c082015161167660c0850182611521565b50505050565b61168581611985565b82525050565b61169481611985565b82525050565b60006020820190506116af60008301846114b4565b92915050565b60006080820190506116ca6000830187611487565b6116d760208301866114b4565b6116e4604083018561168b565b6116f16060830184611530565b95945050505050565b600060608201905061170f60008301866114b4565b61171c60208301856114b4565b611729604083018461168b565b949350505050565b600060808201905061174660008301876114b4565b61175360208301866114b4565b611760604083018561168b565b61176d6060830184611530565b95945050505050565b6000602082019050818103600083015261179081846114c3565b905092915050565b600060208201905081810360008301526117b18161153f565b9050919050565b600060208201905081810360008301526117d181611562565b9050919050565b600060208201905081810360008301526117f181611585565b9050919050565b60006020820190508181036000830152611811816115cb565b9050919050565b600060208201905061182d600083018461168b565b92915050565b6000604082019050611848600083018461168b565b8181036020830152611859816115a8565b905092915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006118b682611985565b91506118c183611985565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118f6576118f5611a0e565b5b828201905092915050565b600061190c82611985565b915061191783611985565b92508282101561192a57611929611a0e565b5b828203905092915050565b600061194082611965565b9050919050565b600061195282611965565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061199a826119a1565b9050919050565b60006119ac826119b3565b9050919050565b60006119be82611965565b9050919050565b60006119d082611985565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a0357611a02611a0e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520707572636861736500000000602082015250565b7f5072656d697373696f6e2064656e696564000000000000000000000000000000600082015250565b7f5072696365206d7573742062652061626f7665207a65726f0000000000000000600082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b611bc281611935565b8114611bcd57600080fd5b50565b611bd981611985565b8114611be457600080fd5b5056fea2646970667358221220c593efae42522e36356a5a72acc24dab6a613a3d68b74430f6200dbb336607bb64736f6c63430008070033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
