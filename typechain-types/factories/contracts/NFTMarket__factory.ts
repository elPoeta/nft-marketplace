/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__ItemId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiered",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__ListingFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__Price",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__SetListingFee",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "marketItemNFT",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sold",
        type: "uint256",
      },
    ],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "nextOffset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSolded",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "fetchMarketItemsByTime",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getItemById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTBySeller",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalItems",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setListingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506608e1bc9bf0400060048190555061276a806100776000396000f3fe6080604052600436106100a75760003560e01c8063597a8f9d11610064578063597a8f9d1461019d578063893d20e8146101dc578063a82ba76f14610207578063af5f172d14610223578063b8fe6abe14610260578063cd2f07101461028b576100a7565b8063035b987e146100ac57806303976f76146100d7578063131dbd091461010257806329aa3a421461012b578063310aac691461015657806358eb2df514610181575b600080fd5b3480156100b857600080fd5b506100c16102c8565b6040516100ce9190612269565b60405180910390f35b3480156100e357600080fd5b506100ec61059c565b6040516100f99190612269565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190611dcf565b610870565b005b34801561013757600080fd5b5061014061090a565b60405161014d9190612269565b60405180910390f35b34801561016257600080fd5b5061016b610ba8565b6040516101789190612365565b60405180910390f35b61019b60048036038101906101969190611d7c565b610bd8565b005b3480156101a957600080fd5b506101c460048036038101906101bf9190611e3c565b610f59565b6040516101d39392919061228b565b60405180910390f35b3480156101e857600080fd5b506101f1611271565b6040516101fe9190612171565b60405180910390f35b610221600480360381019061021c9190611d3c565b61129b565b005b34801561022f57600080fd5b5061024a60048036038101906102459190611dfc565b6115f9565b6040516102579190612269565b60405180910390f35b34801561026c57600080fd5b50610275611926565b6040516102829190612365565b60405180910390f35b34801561029757600080fd5b506102b260048036038101906102ad9190611dcf565b611930565b6040516102bf9190612349565b60405180910390f35b606060006102d66001611afb565b905060006102e382611b09565b90506000808267ffffffffffffffff811115610302576103016125b9565b5b60405190808252806020026020018201604052801561033b57816020015b610328611c89565b8152602001906001900390816103205790505b50905060005b84811015610591573373ffffffffffffffffffffffffffffffffffffffff166005600060018461037191906123f8565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057e576000600560006001846103d291906123f8565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250508486815181106105625761056161258a565b5b6020026020010181905250848061057890612512565b95505050505b808061058990612512565b915050610341565b508094505050505090565b606060006105aa6001611afb565b905060006105b782611bbe565b90506000808267ffffffffffffffff8111156105d6576105d56125b9565b5b60405190808252806020026020018201604052801561060f57816020015b6105fc611c89565b8152602001906001900390816105f45790505b50905060005b84811015610865573373ffffffffffffffffffffffffffffffffffffffff166005600060018461064591906123f8565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610852576000600560006001846106a691906123f8565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250508486815181106108365761083561258a565b5b6020026020010181905250848061084c90612512565b95505050505b808061085d90612512565b915050610615565b508094505050505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610900576040517f1ff487320000000000000000000000000000000000000000000000000000000081526004016108f7906122e9565b60405180910390fd5b8060048190555050565b606060006109186001611afb565b905060006109266002611afb565b82610931919061244e565b905060008167ffffffffffffffff81111561094f5761094e6125b9565b5b60405190808252806020026020018201604052801561098857816020015b610975611c89565b81526020019060019003908161096d5790505b5090506000805b84811015610b9d57600560006001836109a891906123f8565b815260200190815260200160002060070160009054906101000a900460ff16610b8a576000600560006001846109de91906123f8565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff161515151581525050858581518110610b6e57610b6d61258a565b5b60200260200101819052508380610b8490612512565b94505050505b8080610b9590612512565b91505061098f565b508194505050505090565b600080610bb56001611afb565b90506000610bc36002611afb565b82610bce919061244e565b9050809250505090565b60026000541415610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1590612329565b60405180910390fd5b600260008190555060008111610c69576040517fb0cca22b000000000000000000000000000000000000000000000000000000008152600401610c6090612309565b60405180910390fd5b6004543414610cb1576004546040517f4306e2a8000000000000000000000000000000000000000000000000000000008152600401610ca89190612380565b60405180910390fd5b610cbb6001611c73565b6000610cc76001611afb565b905060004290506040518061010001604052808381526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200184815260200182815260200160001515815250600560008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff0219169083151502179055509050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610ebe939291906121df565b600060405180830381600087803b158015610ed857600080fd5b505af1158015610eec573d6000803e3d6000fd5b50505050838573ffffffffffffffffffffffffffffffffffffffff16837f324e86ff66d7c77debc9fe7d78660701077b278899494594ed090d480aa915dd33600088876000604051610f42959493929190612216565b60405180910390a450506001600081905550505050565b60606000806000610f6a6001611afb565b90506000610f786002611afb565b82610f83919061244e565b90508781610f91919061244e565b871115610fa7578781610fa4919061244e565b96505b6000871415610fb557600196505b60008767ffffffffffffffff811115610fd157610fd06125b9565b5b60405190808252806020026020018201604052801561100a57816020015b610ff7611c89565b815260200190600190039081610fef5790505b5090506000806000805b868110801561102257508b84105b1561124d5760018b828f61103691906123f8565b61104091906123f8565b61104a91906123f8565b92506005600084815260200190815260200160002060070160009054906101000a900460ff1661122b5760006005600085815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff16151515158152505087878151811061120b5761120a61258a565b5b6020026020010181905250858061122190612512565b965050505061123a565b818061123690612512565b9250505b808061124590612512565b915050611014565b50838b8d61125b91906123f8565b8298509850985050505050505093509350939050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260005414156112e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d890612329565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414611361576040517fb0cca22b000000000000000000000000000000000000000000000000000000008152600401611358906122c9565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156113dd573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161141b939291906121df565b600060405180830381600087803b15801561143557600080fd5b505af1158015611449573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060070160006101000a81548160ff0219169083151502179055506114db6002611c73565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015611545573d6000803e3d6000fd5b50808473ffffffffffffffffffffffffffffffffffffffff16847f324e86ff66d7c77debc9fe7d78660701077b278899494594ed090d480aa915dd6005600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387600560008b81526020019081526020016000206006015460016040516115e395949392919061218c565b60405180910390a4505060016000819055505050565b606060006116076001611afb565b905060006116156002611afb565b82611620919061244e565b90506000600282611631919061244e565b9050600085141561164157600194505b808261164d919061244e565b851115611663578082611660919061244e565b94505b60008567ffffffffffffffff81111561167f5761167e6125b9565b5b6040519080825280602002602001820160405280156116b857816020015b6116a5611c89565b81526020019060019003908161169d5790505b5090506000805b85811080156116cd57508782105b156119175760056000600183876116e491906123f8565b6116ee91906123f8565b815260200190815260200160002060070160009054906101000a900460ff16611904576000600560006001848861172591906123f8565b61172f91906123f8565b8152602001908152602001600020600001549050600060056000838152602001908152602001600020905060008b148061177d57504281600601541115801561177c57508a816006015410155b5b15611901578060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250508585815181106118e7576118e661258a565b5b602002602001018190525083806118fd90612512565b9450505b50505b808061190f90612512565b9150506116bf565b50819550505050505092915050565b6000600454905090565b611938611c89565b600182108015611950575061194d6001611afb565b82115b15611990576040517ff1bfa95b000000000000000000000000000000000000000000000000000000008152600401611987906122e9565b60405180910390fd5b6005600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250509050919050565b600081600001549050919050565b6000806000905060005b83811015611bb4573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611b4391906123f8565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611ba157600182611b9e91906123f8565b91505b8080611bac90612512565b915050611b13565b5080915050919050565b6000806000905060005b83811015611c69573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611bf891906123f8565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c5657600182611c5391906123f8565b91505b8080611c6190612512565b915050611bc8565b5080915050919050565b6001816000016000828254019250508190555050565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b600081359050611d2181612706565b92915050565b600081359050611d368161271d565b92915050565b60008060408385031215611d5357611d526125e8565b5b6000611d6185828601611d12565b9250506020611d7285828601611d27565b9150509250929050565b600080600060608486031215611d9557611d946125e8565b5b6000611da386828701611d12565b9350506020611db486828701611d27565b9250506040611dc586828701611d27565b9150509250925092565b600060208284031215611de557611de46125e8565b5b6000611df384828501611d27565b91505092915050565b60008060408385031215611e1357611e126125e8565b5b6000611e2185828601611d27565b9250506020611e3285828601611d27565b9150509250929050565b600080600060608486031215611e5557611e546125e8565b5b6000611e6386828701611d27565b9350506020611e7486828701611d27565b9250506040611e8586828701611d27565b9150509250925092565b6000611e9b838361200f565b6101008301905092915050565b611eb1816124dc565b82525050565b611ec081612494565b82525050565b611ecf81612482565b82525050565b611ede81612482565b82525050565b6000611eef826123be565b611ef981856123d6565b9350611f04836123ae565b8060005b83811015611f35578151611f1c8882611e8f565b9750611f27836123c9565b925050600181019050611f08565b5085935050505092915050565b611f4b816124a6565b82525050565b611f5a816124a6565b82525050565b6000611f6d603c836123e7565b9150611f78826125ed565b604082019050919050565b6000611f906011836123e7565b9150611f9b8261263c565b602082019050919050565b6000611fb36018836123e7565b9150611fbe82612665565b602082019050919050565b6000611fd66024836123e7565b9150611fe18261268e565b604082019050919050565b6000611ff9601f836123e7565b9150612004826126dd565b602082019050919050565b610100820160008201516120266000850182612153565b5060208201516120396020850182611ec6565b50604082015161204c6040850182612153565b50606082015161205f6060850182611eb7565b5060808201516120726080850182611eb7565b5060a082015161208560a0850182612153565b5060c082015161209860c0850182612153565b5060e08201516120ab60e0850182611f42565b50505050565b610100820160008201516120c86000850182612153565b5060208201516120db6020850182611ec6565b5060408201516120ee6040850182612153565b5060608201516121016060850182611eb7565b5060808201516121146080850182611eb7565b5060a082015161212760a0850182612153565b5060c082015161213a60c0850182612153565b5060e082015161214d60e0850182611f42565b50505050565b61215c816124d2565b82525050565b61216b816124d2565b82525050565b60006020820190506121866000830184611ed5565b92915050565b600060a0820190506121a16000830188611ea8565b6121ae6020830187611ed5565b6121bb6040830186612162565b6121c86060830185612162565b6121d56080830184611f51565b9695505050505050565b60006060820190506121f46000830186611ed5565b6122016020830185611ed5565b61220e6040830184612162565b949350505050565b600060a08201905061222b6000830188611ed5565b6122386020830187611ed5565b6122456040830186612162565b6122526060830185612162565b61225f6080830184611f51565b9695505050505050565b600060208201905081810360008301526122838184611ee4565b905092915050565b600060608201905081810360008301526122a58186611ee4565b90506122b46020830185612162565b6122c16040830184612162565b949350505050565b600060208201905081810360008301526122e281611f60565b9050919050565b6000602082019050818103600083015261230281611f83565b9050919050565b6000602082019050818103600083015261232281611fa6565b9050919050565b6000602082019050818103600083015261234281611fec565b9050919050565b60006101008201905061235f60008301846120b1565b92915050565b600060208201905061237a6000830184612162565b92915050565b60006040820190506123956000830184612162565b81810360208301526123a681611fc9565b905092915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612403826124d2565b915061240e836124d2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124435761244261255b565b5b828201905092915050565b6000612459826124d2565b9150612464836124d2565b9250828210156124775761247661255b565b5b828203905092915050565b600061248d826124b2565b9050919050565b600061249f826124b2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006124e7826124ee565b9050919050565b60006124f982612500565b9050919050565b600061250b826124b2565b9050919050565b600061251d826124d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156125505761254f61255b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520707572636861736500000000602082015250565b7f5072656d697373696f6e2064656e696564000000000000000000000000000000600082015250565b7f5072696365206d7573742062652061626f7665207a65726f0000000000000000600082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61270f81612482565b811461271a57600080fd5b50565b612726816124d2565b811461273157600080fd5b5056fea264697066735822122004d984db29a613fed6747916eee73f66006ad234cf2cccdb5394abc5e446d87a64736f6c63430008070033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
