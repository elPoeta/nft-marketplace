/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__ItemId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiered",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__ListingFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__Price",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NFTMarket__SetListingFee",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "marketItemNFT",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "nextOffset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "fetchMarketItemsByTime",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getItemById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTBySeller",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setListingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506608e1bc9bf040006004819055506126a0806100776000396000f3fe60806040526004361061009c5760003560e01c80637063b64e116100645780637063b64e14610167578063893d20e8146101a6578063a82ba76f146101d1578063af5f172d146101ed578063b8fe6abe1461022a578063cd2f0710146102555761009c565b8063035b987e146100a157806303976f76146100cc578063131dbd09146100f757806329aa3a421461012057806358eb2df51461014b575b600080fd5b3480156100ad57600080fd5b506100b6610292565b6040516100c3919061219f565b60405180910390f35b3480156100d857600080fd5b506100e1610566565b6040516100ee919061219f565b60405180910390f35b34801561010357600080fd5b5061011e60048036038101906101199190611d58565b61083a565b005b34801561012c57600080fd5b506101356108d4565b604051610142919061219f565b60405180910390f35b61016560048036038101906101609190611d05565b610b72565b005b34801561017357600080fd5b5061018e60048036038101906101899190611d85565b610ef3565b60405161019d939291906121c1565b60405180910390f35b3480156101b257600080fd5b506101bb6111fa565b6040516101c891906120a7565b60405180910390f35b6101eb60048036038101906101e69190611cc5565b611224565b005b3480156101f957600080fd5b50610214600480360381019061020f9190611d85565b611582565b604051610221919061219f565b60405180910390f35b34801561023657600080fd5b5061023f6118af565b60405161024c919061229b565b60405180910390f35b34801561026157600080fd5b5061027c60048036038101906102779190611d58565b6118b9565b604051610289919061227f565b60405180910390f35b606060006102a06001611a84565b905060006102ad82611a92565b90506000808267ffffffffffffffff8111156102cc576102cb6124ef565b5b60405190808252806020026020018201604052801561030557816020015b6102f2611c12565b8152602001906001900390816102ea5790505b50905060005b8481101561055b573373ffffffffffffffffffffffffffffffffffffffff166005600060018461033b919061232e565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105485760006005600060018461039c919061232e565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff16151515158152505084868151811061052c5761052b6124c0565b5b6020026020010181905250848061054290612448565b95505050505b808061055390612448565b91505061030b565b508094505050505090565b606060006105746001611a84565b9050600061058182611b47565b90506000808267ffffffffffffffff8111156105a05761059f6124ef565b5b6040519080825280602002602001820160405280156105d957816020015b6105c6611c12565b8152602001906001900390816105be5790505b50905060005b8481101561082f573373ffffffffffffffffffffffffffffffffffffffff166005600060018461060f919061232e565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561081c57600060056000600184610670919061232e565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff161515151581525050848681518110610800576107ff6124c0565b5b6020026020010181905250848061081690612448565b95505050505b808061082790612448565b9150506105df565b508094505050505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ca576040517f1ff487320000000000000000000000000000000000000000000000000000000081526004016108c19061221f565b60405180910390fd5b8060048190555050565b606060006108e26001611a84565b905060006108f06002611a84565b826108fb9190612384565b905060008167ffffffffffffffff811115610919576109186124ef565b5b60405190808252806020026020018201604052801561095257816020015b61093f611c12565b8152602001906001900390816109375790505b5090506000805b84811015610b675760056000600183610972919061232e565b815260200190815260200160002060070160009054906101000a900460ff16610b54576000600560006001846109a8919061232e565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff161515151581525050858581518110610b3857610b376124c0565b5b60200260200101819052508380610b4e90612448565b94505050505b8080610b5f90612448565b915050610959565b508194505050505090565b60026000541415610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf9061225f565b60405180910390fd5b600260008190555060008111610c03576040517fb0cca22b000000000000000000000000000000000000000000000000000000008152600401610bfa9061223f565b60405180910390fd5b6004543414610c4b576004546040517f4306e2a8000000000000000000000000000000000000000000000000000000008152600401610c4291906122b6565b60405180910390fd5b610c556001611bfc565b6000610c616001611a84565b905060004290506040518061010001604052808381526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200184815260200182815260200160001515815250600560008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff0219169083151502179055509050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610e5893929190612115565b600060405180830381600087803b158015610e7257600080fd5b505af1158015610e86573d6000803e3d6000fd5b50505050838573ffffffffffffffffffffffffffffffffffffffff16837f324e86ff66d7c77debc9fe7d78660701077b278899494594ed090d480aa915dd33600088876000604051610edc95949392919061214c565b60405180910390a450506001600081905550505050565b60606000806000610f046001611a84565b90506000610f126002611a84565b82610f1d9190612384565b90506000861415610f2d57600195505b8681610f399190612384565b861115610f4f578681610f4c9190612384565b95505b60008667ffffffffffffffff811115610f6b57610f6a6124ef565b5b604051908082528060200260200182016040528015610fa457816020015b610f91611c12565b815260200190600190039081610f895790505b5090506000805b8481108015610fb957508882105b156111da57600560006001838d610fd0919061232e565b610fda919061232e565b815260200190815260200160002060070160009054906101000a900460ff166111c7576000600560006001848e611011919061232e565b61101b919061232e565b815260200190815260200160002060000154905060006005600083815260200190815260200160002090508060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250508585815181106111ab576111aa6124c0565b5b602002602001018190525083806111c190612448565b94505050505b80806111d290612448565b915050610fab565b5081888a6111e8919061232e565b84965096509650505050509250925092565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002600054141561126a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112619061225f565b60405180910390fd5b60026000819055506000600560008381526020019081526020016000206005015490506000600560008481526020019081526020016000206002015490508134146112ea576040517fb0cca22b0000000000000000000000000000000000000000000000000000000081526004016112e1906121ff565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015611366573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016113a493929190612115565b600060405180830381600087803b1580156113be57600080fd5b505af11580156113d2573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060070160006101000a81548160ff0219169083151502179055506114646002611bfc565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156114ce573d6000803e3d6000fd5b50808473ffffffffffffffffffffffffffffffffffffffff16847f324e86ff66d7c77debc9fe7d78660701077b278899494594ed090d480aa915dd6005600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387600560008b815260200190815260200160002060060154600160405161156c9594939291906120c2565b60405180910390a4505060016000819055505050565b606060006115906001611a84565b9050600061159e6002611a84565b826115a99190612384565b905060006002826115ba9190612384565b905060008514156115ca57600194505b80826115d69190612384565b8511156115ec5780826115e99190612384565b94505b60008567ffffffffffffffff811115611608576116076124ef565b5b60405190808252806020026020018201604052801561164157816020015b61162e611c12565b8152602001906001900390816116265790505b5090506000805b858110801561165657508782105b156118a057600560006001838761166d919061232e565b611677919061232e565b815260200190815260200160002060070160009054906101000a900460ff1661188d57600060056000600184886116ae919061232e565b6116b8919061232e565b8152602001908152602001600020600001549050600060056000838152602001908152602001600020905060008b148061170657504281600601541115801561170557508a816006015410155b5b1561188a578060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250508585815181106118705761186f6124c0565b5b6020026020010181905250838061188690612448565b9450505b50505b808061189890612448565b915050611648565b50819550505050505092915050565b6000600454905090565b6118c1611c12565b6001821080156118d957506118d66001611a84565b82115b15611919576040517ff1bfa95b0000000000000000000000000000000000000000000000000000000081526004016119109061221f565b60405180910390fd5b6005600083815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250509050919050565b600081600001549050919050565b6000806000905060005b83811015611b3d573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611acc919061232e565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611b2a57600182611b27919061232e565b91505b8080611b3590612448565b915050611a9c565b5080915050919050565b6000806000905060005b83811015611bf2573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611b81919061232e565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611bdf57600182611bdc919061232e565b91505b8080611bea90612448565b915050611b51565b5080915050919050565b6001816000016000828254019250508190555050565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b600081359050611caa8161263c565b92915050565b600081359050611cbf81612653565b92915050565b60008060408385031215611cdc57611cdb61251e565b5b6000611cea85828601611c9b565b9250506020611cfb85828601611cb0565b9150509250929050565b600080600060608486031215611d1e57611d1d61251e565b5b6000611d2c86828701611c9b565b9350506020611d3d86828701611cb0565b9250506040611d4e86828701611cb0565b9150509250925092565b600060208284031215611d6e57611d6d61251e565b5b6000611d7c84828501611cb0565b91505092915050565b60008060408385031215611d9c57611d9b61251e565b5b6000611daa85828601611cb0565b9250506020611dbb85828601611cb0565b9150509250929050565b6000611dd18383611f45565b6101008301905092915050565b611de781612412565b82525050565b611df6816123ca565b82525050565b611e05816123b8565b82525050565b611e14816123b8565b82525050565b6000611e25826122f4565b611e2f818561230c565b9350611e3a836122e4565b8060005b83811015611e6b578151611e528882611dc5565b9750611e5d836122ff565b925050600181019050611e3e565b5085935050505092915050565b611e81816123dc565b82525050565b611e90816123dc565b82525050565b6000611ea3603c8361231d565b9150611eae82612523565b604082019050919050565b6000611ec660118361231d565b9150611ed182612572565b602082019050919050565b6000611ee960188361231d565b9150611ef48261259b565b602082019050919050565b6000611f0c60248361231d565b9150611f17826125c4565b604082019050919050565b6000611f2f601f8361231d565b9150611f3a82612613565b602082019050919050565b61010082016000820151611f5c6000850182612089565b506020820151611f6f6020850182611dfc565b506040820151611f826040850182612089565b506060820151611f956060850182611ded565b506080820151611fa86080850182611ded565b5060a0820151611fbb60a0850182612089565b5060c0820151611fce60c0850182612089565b5060e0820151611fe160e0850182611e78565b50505050565b61010082016000820151611ffe6000850182612089565b5060208201516120116020850182611dfc565b5060408201516120246040850182612089565b5060608201516120376060850182611ded565b50608082015161204a6080850182611ded565b5060a082015161205d60a0850182612089565b5060c082015161207060c0850182612089565b5060e082015161208360e0850182611e78565b50505050565b61209281612408565b82525050565b6120a181612408565b82525050565b60006020820190506120bc6000830184611e0b565b92915050565b600060a0820190506120d76000830188611dde565b6120e46020830187611e0b565b6120f16040830186612098565b6120fe6060830185612098565b61210b6080830184611e87565b9695505050505050565b600060608201905061212a6000830186611e0b565b6121376020830185611e0b565b6121446040830184612098565b949350505050565b600060a0820190506121616000830188611e0b565b61216e6020830187611e0b565b61217b6040830186612098565b6121886060830185612098565b6121956080830184611e87565b9695505050505050565b600060208201905081810360008301526121b98184611e1a565b905092915050565b600060608201905081810360008301526121db8186611e1a565b90506121ea6020830185612098565b6121f76040830184612098565b949350505050565b6000602082019050818103600083015261221881611e96565b9050919050565b6000602082019050818103600083015261223881611eb9565b9050919050565b6000602082019050818103600083015261225881611edc565b9050919050565b6000602082019050818103600083015261227881611f22565b9050919050565b6000610100820190506122956000830184611fe7565b92915050565b60006020820190506122b06000830184612098565b92915050565b60006040820190506122cb6000830184612098565b81810360208301526122dc81611eff565b905092915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061233982612408565b915061234483612408565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561237957612378612491565b5b828201905092915050565b600061238f82612408565b915061239a83612408565b9250828210156123ad576123ac612491565b5b828203905092915050565b60006123c3826123e8565b9050919050565b60006123d5826123e8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061241d82612424565b9050919050565b600061242f82612436565b9050919050565b6000612441826123e8565b9050919050565b600061245382612408565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561248657612485612491565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520707572636861736500000000602082015250565b7f5072656d697373696f6e2064656e696564000000000000000000000000000000600082015250565b7f5072696365206d7573742062652061626f7665207a65726f0000000000000000600082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b612645816123b8565b811461265057600080fd5b50565b61265c81612408565b811461266757600080fd5b5056fea2646970667358221220d2a96db6de0215586fbe8f949cb83886839c1ee26bba928197d3fd29388c93fd64736f6c63430008070033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  override connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
